var searchIndex = JSON.parse('{\
"async_dnssd":{"doc":"Asynchronous wrapper for DNS-SD C libraries","i":[[3,"Class","async_dnssd","DNS CLASS",null,null],[12,"0","","",0,null],[3,"Type","","DNS (RR)TYPE",null,null],[12,"0","","",1,null],[3,"InterfaceIndex","","Network interface index",null,null],[3,"BrowsedFlags","","Flags for `BrowseResult`",null,null],[3,"Browse","","Pending browse request",null,null],[3,"BrowseResult","","Browse result",null,null],[12,"flags","","Flags indicating whether the service was added or removed…",2,null],[12,"interface","","Interface the service was found on.",2,null],[12,"service_name","","Name of the service.",2,null],[12,"reg_type","","Type of the service",2,null],[12,"domain","","Domain the service was found in",2,null],[3,"BrowseData","","Optional data when browsing for a service; either use its…",null,null],[12,"interface","","interface to query records on",3,null],[12,"domain","","domain on which to search for the service",3,null],[3,"Connection","","Connection to register records with",null,null],[3,"RegisterRecordFlags","","Flags used to register a record",null,null],[3,"RegisterRecord","","Pending record registration",null,null],[3,"RegisterRecordData","","Optional data when registering a record; either use its…",null,null],[12,"flags","","flags for registration",4,null],[12,"interface","","interface to register record on",4,null],[12,"rr_class","","class of the resource record (default: `IN`)",4,null],[12,"ttl","","time to live of the resource record in seconds (passing 0…",4,null],[3,"EnumeratedFlags","","Flags for `EnumerateDomains`",null,null],[3,"EnumerateDomains","","Pending domain enumeration",null,null],[3,"EnumerateResult","","Domain enumeration result",null,null],[12,"flags","","flags",5,null],[12,"interface","","interface domain was found on",5,null],[12,"domain","","domain name",5,null],[3,"QueryRecordFlags","","Flags used to query for a record",null,null],[3,"QueriedRecordFlags","","Flags for `QueryRecordResult`",null,null],[3,"QueryRecord","","Pending query",null,null],[3,"QueryRecordResult","","Query result",null,null],[12,"flags","","flags",6,null],[12,"interface","","interface the record was found on",6,null],[12,"fullname","","name of record",6,null],[12,"rr_type","","type of record",6,null],[12,"rr_class","","class of record",6,null],[12,"rdata","","wire RDATA of record",6,null],[12,"ttl","","TTL (time to live) of record",6,null],[3,"QueryRecordData","","Optional data when querying for a record; either use its…",null,null],[12,"flags","","flags for query",7,null],[12,"interface","","interface to query records on",7,null],[12,"rr_class","","class of the resource record (default: `IN`)",7,null],[3,"Record","","A successful record registration",null,null],[3,"RegisterFlags","","Flags used to register service",null,null],[3,"Registration","","Successful registration",null,null],[3,"Register","","Pending registration",null,null],[3,"RegisterResult","","Service registration result",null,null],[12,"name","","if `NoAutoRename` was set this is the original name,…",8,null],[12,"reg_type","","the registered service type",8,null],[12,"domain","","domain the service was registered on",8,null],[3,"RegisterData","","Optional data when registering a service; either use its…",null,null],[12,"flags","","flags for registration",9,null],[12,"interface","","interface to register service on",9,null],[12,"name","","service name, defaults to hostname",9,null],[12,"domain","","domain on which to advertise the service",9,null],[12,"host","","the SRV target host name, defaults to local hostname(s).…",9,null],[12,"txt","","The TXT record rdata. Empty RDATA is treated like `b\\\"\\\\0\\\"`,…",9,null],[3,"ResolvedFlags","","Flags for `ResolveResult`",null,null],[3,"Resolve","","Pending resolve request",null,null],[3,"ResolveResult","","Resolve result",null,null],[12,"flags","","flags",10,null],[12,"interface","","interface service was resolved on",10,null],[12,"fullname","","full name of service",10,null],[12,"host_target","","hostname the service is provided on",10,null],[12,"port","","port the service is provided on (native endian)",10,null],[12,"txt","","TXT RDATA describing service parameters",10,null],[3,"ResolvedHostFlags","","Flags for `ResolveHostResult`",null,null],[3,"ResolveHostData","","Optional data when querying for a record; either use its…",null,null],[12,"flags","","flags for query",11,null],[12,"interface","","interface to query records on",11,null],[3,"ResolveHost","","Pending resolve",null,null],[3,"ResolveHostResult","","Resolve host result",null,null],[12,"flags","","flags",12,null],[12,"address","","address",12,null],[3,"FullName","","Full name consiting of (up to) three parts",null,null],[12,"service","","(unescaped) service name (becomes single label in full name)",13,null],[12,"reg_type","","registration type (valid names don\'t need escaping)",13,null],[12,"domain","","(escaped) domain name (most names don\'t need escaping)",13,null],[3,"TimeoutStream","","Add a timeout to a stream; each time an item is received…",null,null],[3,"TxtRecord","","Key-Value container that uses DNS `TXT` RDATA as…",null,null],[3,"TxtRecordIter","","Iterator for entries in `TxtRecord`",null,null],[4,"Error","","API Error",null,null],[13,"KnownError","","If error code used some recognized name",14,null],[13,"UnknownError","","Unrecognized error codes",14,null],[13,"IoError","","IO error",14,null],[4,"Interface","","Network interface",null,null],[13,"Any","","Any interface; depending on domain name this means either…",15,null],[13,"Index","","Single interface",15,null],[13,"LocalOnly","","Local machine only",15,null],[13,"Unicast","","See `kDNSServiceInterfaceIndexUnicast`",15,null],[13,"PeerToPeer","","See `kDNSServiceInterfaceIndexP2P`",15,null],[4,"Enumerate","","Whether to enumerate domains which are browsed or domains…",null,null],[13,"BrowseDomains","","enumerate domains which can be browsed",16,null],[13,"RegistrationDomains","","enumerate domains to register services/records on",16,null],[4,"ScopedSocketAddr","","IP address with port and \\\"scope id\\\" (even for IPv4)",null,null],[13,"V4","","IPv4 target",17,null],[12,"address","async_dnssd::ScopedSocketAddr","IP address",18,null],[12,"port","","Port",18,null],[12,"scope_id","","Scope id (interface index; 0 for any)",18,null],[13,"V6","async_dnssd","IPv6 target",17,null],[12,"address","async_dnssd::ScopedSocketAddr","IP address",19,null],[12,"port","","Port",19,null],[12,"scope_id","","Scope id (interface index; 0 for any)",19,null],[4,"TimeoutStreamError","async_dnssd","Error produces by `TimeoutStream`",null,null],[13,"StreamError","","An error occured in the underlying stream",20,null],[13,"TimeoutError","","Setting / checking the timeout failed",20,null],[4,"TxtRecordError","","Error returned when inserting new entries failed",null,null],[13,"InvalidKey","","Key contained invalid characters",21,null],[13,"EntryTooLong","","Total entry would be longer than 255 bytes",21,null],[5,"browse_extended","","Browse for available services",null,[[["browsedata",3]],[["result",6],["browse",3]]]],[5,"browse","","Browse for available services",null,[[],[["result",6],["browse",3]]]],[5,"connect","","Create `Connection` to register records with",null,[[],[["result",6],["connection",3]]]],[5,"enumerate_domains","","Enumerate domains that are recommended for registration or…",null,[[["enumerate",4],["interface",4]],[["result",6],["enumeratedomains",3]]]],[5,"query_record_extended","","Query for an arbitrary DNS record",null,[[["queryrecorddata",3],["type",3]],[["result",6],["queryrecord",3]]]],[5,"query_record","","Query for an arbitrary DNS record",null,[[["type",3]],[["result",6],["queryrecord",3]]]],[5,"register_extended","","Register a service",null,[[["registerdata",3]],[["register",3],["result",6]]]],[5,"register","","Register a service",null,[[],[["register",3],["result",6]]]],[5,"resolve","","Find hostname and port (and more) for a service",null,[[["interface",4]],[["resolve",3],["result",6]]]],[5,"resolve_host_extended","","Resolves hostname (with passed port) to stream of…",null,[[["resolvehostdata",3]],[["resolvehost",3],["result",6]]]],[5,"reconfirm_record","","Purge record from cache",null,[[["interface",4],["type",3],["class",3]],["result",6]]],[18,"IN","","CLASS Internet",0,null],[18,"CH","","CLASS \\\"Chaos\\\"",0,null],[18,"HS","","CLASS \\\"Hesiod\\\"",0,null],[18,"NONE","","QCLASS NONE",0,null],[18,"ANY","","QCLASS \\\"*\\\" (ANY)",0,null],[18,"A","","a host address",1,null],[18,"NS","","an authoritative name server",1,null],[18,"MD","","a mail destination (OBSOLETE - use MX)",1,null],[18,"MF","","a mail forwarder (OBSOLETE - use MX)",1,null],[18,"CNAME","","the canonical name for an alias",1,null],[18,"SOA","","marks the start of a zone of authority",1,null],[18,"MB","","a mailbox domain name (EXPERIMENTAL)",1,null],[18,"MG","","a mail group member (EXPERIMENTAL)",1,null],[18,"MR","","a mail rename domain name (EXPERIMENTAL)",1,null],[18,"NULL","","a null RR (EXPERIMENTAL)",1,null],[18,"WKS","","a well known service description",1,null],[18,"PTR","","a domain name pointer",1,null],[18,"HINFO","","host information",1,null],[18,"MINFO","","mailbox or mail list information",1,null],[18,"MX","","mail exchange",1,null],[18,"TXT","","text strings",1,null],[18,"RP","","for Responsible Person",1,null],[18,"AFSDB","","for AFS Data Base location",1,null],[18,"X25","","for X.25 PSDN address",1,null],[18,"ISDN","","for ISDN address",1,null],[18,"RT","","for Route Through",1,null],[18,"NSAP","","for NSAP address, NSAP style A record",1,null],[18,"NSAP_PTR","","for domain name pointer, NSAP style",1,null],[18,"SIG","","for security signature",1,null],[18,"KEY","","for security key",1,null],[18,"PX","","X.400 mail mapping information",1,null],[18,"GPOS","","Geographical Position",1,null],[18,"AAAA","","IP6 Address",1,null],[18,"LOC","","Location Information",1,null],[18,"NXT","","Next Domain (OBSOLETE)",1,null],[18,"EID","","Endpoint Identifier",1,null],[18,"NIMLOC","","Nimrod Locator",1,null],[18,"SRV","","Server Selection",1,null],[18,"ATMA","","ATM Address",1,null],[18,"NAPTR","","Naming Authority Pointer",1,null],[18,"KX","","Key Exchanger",1,null],[18,"CERT","","CERT",1,null],[18,"A6","","A6 (OBSOLETE - use AAAA)",1,null],[18,"DNAME","","DNAME",1,null],[18,"SINK","","SINK",1,null],[18,"OPT","","OPT",1,null],[18,"APL","","APL",1,null],[18,"DS","","Delegation Signer",1,null],[18,"SSHFP","","SSH Key Fingerprint",1,null],[18,"IPSECKEY","","IPSECKEY",1,null],[18,"RRSIG","","RRSIG",1,null],[18,"NSEC","","NSEC",1,null],[18,"DNSKEY","","DNSKEY",1,null],[18,"DHCID","","DHCID",1,null],[18,"NSEC3","","NSEC3",1,null],[18,"NSEC3PARAM","","NSEC3PARAM",1,null],[18,"TLSA","","TLSA",1,null],[18,"SMIMEA","","S/MIME cert association",1,null],[18,"HIP","","Host Identity Protocol",1,null],[18,"NINFO","","NINFO",1,null],[18,"RKEY","","RKEY",1,null],[18,"TALINK","","Trust Anchor LINK",1,null],[18,"CDS","","Child DS",1,null],[18,"CDNSKEY","","DNSKEY(s) the Child wants reflected in DS",1,null],[18,"OPENPGPKEY","","OpenPGP Key",1,null],[18,"CSYNC","","Child-To-Parent Synchronization",1,null],[18,"SPF","","SPF",1,null],[18,"UINFO","","UINFO",1,null],[18,"UID","","UID",1,null],[18,"GID","","GID",1,null],[18,"UNSPEC","","UNSPEC",1,null],[18,"NID","","NID",1,null],[18,"L32","","L32",1,null],[18,"L64","","L64",1,null],[18,"LP","","LP",1,null],[18,"EUI48","","an EUI-48 address",1,null],[18,"EUI64","","an EUI-64 address",1,null],[18,"TKEY","","Transaction Key",1,null],[18,"TSIG","","Transaction Signature",1,null],[18,"IXFR","","incremental transfer",1,null],[18,"AXFR","","transfer of an entire zone",1,null],[18,"MAILB","","mailbox-related RRs (MB, MG or MR)",1,null],[18,"MAILA","","mail agent RRs (OBSOLETE - see MX)",1,null],[18,"ANY","","\\\"*\\\", a request for all records the server/cache has…",1,null],[18,"URI","","URI",1,null],[18,"CAA","","Certification Authority Restriction",1,null],[18,"AVC","","Application Visibility and Control",1,null],[18,"DOA","","Digital Object Architecture",1,null],[18,"TA","","DNSSEC Trust Authorities",1,null],[18,"DLV","","DNSSEC Lookaside Validation",1,null],[11,"from","","Check if a raw error code represents an error, and convert…",14,[[],[["result",4],["error",4]]]],[11,"from_raw","","Construct new `InterfaceIndex` from raw index and makes…",22,[[],["option",4]]],[11,"into_raw","","raw index",22,[[]]],[11,"from_raw","","Construct from raw value",15,[[]]],[11,"into_raw","","Convert to raw value",15,[[]]],[11,"scope_id","","Extract scope id / interface index",15,[[]]],[18,"MORE_COMING","","Indicates at least one more result is pending in the…",23,null],[18,"ADD","","Indicates the result is new. If not set indicates the…",23,null],[11,"empty","","Returns an empty set of flags",23,[[],["browsedflags",3]]],[11,"all","","Returns the set containing all flags.",23,[[],["browsedflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",23,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",23,[[],[["option",4],["browsedflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",23,[[],["browsedflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",23,[[],["browsedflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",23,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",23,[[["browsedflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",23,[[["browsedflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",23,[[["browsedflags",3]]]],[11,"remove","","Removes the specified flags in-place.",23,[[["browsedflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",23,[[["browsedflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",23,[[["browsedflags",3]]]],[11,"resolve","","Resolve browse result.",2,[[],[["result",6],["resolve",3]]]],[18,"SHARED","","Indicates there might me multiple records with the given…",24,null],[18,"UNIQUE","","Indicates the records with the given name, type and class…",24,null],[11,"empty","","Returns an empty set of flags",24,[[],["registerrecordflags",3]]],[11,"all","","Returns the set containing all flags.",24,[[],["registerrecordflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",24,[[],[["option",4],["registerrecordflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",24,[[],["registerrecordflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",24,[[],["registerrecordflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",24,[[["registerrecordflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",24,[[["registerrecordflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["registerrecordflags",3]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["registerrecordflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["registerrecordflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",24,[[["registerrecordflags",3]]]],[11,"register_record_extended","","Register record on interface with given name, type, class,…",25,[[["registerrecorddata",3],["type",3]],[["result",6],["registerrecord",3]]]],[11,"register_record","","Register record on interface with given name, type, class,…",25,[[["type",3]],[["result",6],["registerrecord",3]]]],[11,"rr_type","","Type of the record",26,[[],["type",3]]],[11,"update_record","","Update record",26,[[],["result",6]]],[11,"keep","","Keep record for as long as the underlying connection lives.",26,[[]]],[18,"MORE_COMING","","Indicates at least one more result is pending in the…",27,null],[18,"ADD","","Indicates the result is new. If not set indicates the…",27,null],[18,"DEFAULT","","Indicates this is the default domain to search (always…",27,null],[11,"empty","","Returns an empty set of flags",27,[[],["enumeratedflags",3]]],[11,"all","","Returns the set containing all flags.",27,[[],["enumeratedflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",27,[[],[["enumeratedflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",27,[[],["enumeratedflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",27,[[],["enumeratedflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",27,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",27,[[["enumeratedflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",27,[[["enumeratedflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["enumeratedflags",3]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["enumeratedflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["enumeratedflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",27,[[["enumeratedflags",3]]]],[18,"LONG_LIVED_QUERY","","long-lived unicast query",28,null],[11,"empty","","Returns an empty set of flags",28,[[],["queryrecordflags",3]]],[11,"all","","Returns the set containing all flags.",28,[[],["queryrecordflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",28,[[],[["option",4],["queryrecordflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",28,[[],["queryrecordflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",28,[[],["queryrecordflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",28,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",28,[[["queryrecordflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",28,[[["queryrecordflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["queryrecordflags",3]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["queryrecordflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["queryrecordflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",28,[[["queryrecordflags",3]]]],[18,"MORE_COMING","","Indicates at least one more result is pending in the…",29,null],[18,"ADD","","Indicates the result is new. If not set indicates the…",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["queriedrecordflags",3]]],[11,"all","","Returns the set containing all flags.",29,[[],["queriedrecordflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",29,[[],[["queriedrecordflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",29,[[],["queriedrecordflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[],["queriedrecordflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",29,[[["queriedrecordflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",29,[[["queriedrecordflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["queriedrecordflags",3]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["queriedrecordflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["queriedrecordflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",29,[[["queriedrecordflags",3]]]],[11,"rr_type","","Type of the record",30,[[],["type",3]]],[11,"update_record","","Update record",30,[[],["result",6]]],[11,"keep","","Keep record alive for as long as the underlying…",30,[[]]],[18,"NO_AUTO_RENAME","","Indicates a name conflict should not get handled…",31,null],[18,"SHARED","","Indicates there might me multiple records with the given…",31,null],[18,"UNIQUE","","Indicates the records with the given name, type and class…",31,null],[11,"empty","","Returns an empty set of flags",31,[[],["registerflags",3]]],[11,"all","","Returns the set containing all flags.",31,[[],["registerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",31,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",31,[[],[["option",4],["registerflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",31,[[],["registerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",31,[[],["registerflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",31,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",31,[[["registerflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",31,[[["registerflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",31,[[["registerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",31,[[["registerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",31,[[["registerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",31,[[["registerflags",3]]]],[11,"add_record","","Add a record to a registered service",32,[[["type",3]],[["record",3],["result",6]]]],[11,"get_default_txt_record","","Get `Record` handle for default TXT record associated with…",32,[[],["record",3]]],[11,"add_record","","Add a record to a registered service",33,[[["type",3]],[["record",3],["result",6]]]],[11,"get_default_txt_record","","Get `Record` handle for default TXT record associated with…",33,[[],["record",3]]],[18,"MORE_COMING","","Indicates at least one more result is pending in the…",34,null],[11,"empty","","Returns an empty set of flags",34,[[],["resolvedflags",3]]],[11,"all","","Returns the set containing all flags.",34,[[],["resolvedflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",34,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",34,[[],[["option",4],["resolvedflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",34,[[],["resolvedflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",34,[[],["resolvedflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",34,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",34,[[["resolvedflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",34,[[["resolvedflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",34,[[["resolvedflags",3]]]],[11,"remove","","Removes the specified flags in-place.",34,[[["resolvedflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",34,[[["resolvedflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",34,[[["resolvedflags",3]]]],[11,"resolve_socket_address","","Lookup socket addresses for resolved service",10,[[],[["resolvehost",3],["result",6]]]],[18,"ADD","","Indicates the result is new. If not set indicates the…",35,null],[11,"empty","","Returns an empty set of flags",35,[[],["resolvedhostflags",3]]],[11,"all","","Returns the set containing all flags.",35,[[],["resolvedhostflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",35,[[],[["option",4],["resolvedhostflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",35,[[],["resolvedhostflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",35,[[],["resolvedhostflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",35,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",35,[[["resolvedhostflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",35,[[["resolvedhostflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["resolvedhostflags",3]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["resolvedhostflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["resolvedhostflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",35,[[["resolvedhostflags",3]]]],[11,"new","","Create new `ScopedSocketAddr`",17,[[["ipaddr",4]]]],[11,"construct","","Escape and concatenate all three parts to a full name",13,[[],[["string",3],["result",6]]]],[11,"new","","Create new `TimeoutStream`.",36,[[["duration",3]],["result",6]]],[11,"into_io_error","","Combine to an `std::io::Error`.",20,[[],["error",3]]],[11,"new","","Constructs a new, empty `TxtRecord`.",37,[[]]],[11,"parse_vec","","Parse binary blob as TXT RDATA",37,[[["vec",3]],["option",4]]],[11,"parse","","Parse some binary blob as TXT RDATA",37,[[],["option",4]]],[11,"with_capacity","","Constructs a new, empty `TxtRecord` with the specified…",37,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",37,[[]]],[11,"is_empty","","Returns `true` if the `TxtRecord` contains no elements…",37,[[]]],[11,"clear","","Clears the `TxtRecord`, removing all entries.",37,[[]]],[11,"data","","if not empty this returns valid TXT RDATA, otherwise just…",37,[[]]],[11,"rdata","","always returns valid TXT RDATA; when the container is…",37,[[]]],[11,"iter","","Iterate over all `(key, value)` pairs.",37,[[],["txtrecorditer",3]]],[11,"get","","Get value for entry with given key",37,[[],[["option",4],["option",4]]]],[11,"remove","","Remove entry with given key (if it exists)",37,[[]]],[11,"set","","Insert or update the entry with `key` to have the given…",37,[[["option",4]],[["result",4],["txtrecorderror",4]]]],[11,"set_no_value","","Insert or update the entry with `key` to have no value",37,[[],[["result",4],["txtrecorderror",4]]]],[11,"set_value","","Insert or update the entry with `key` to have the given…",37,[[],[["result",4],["txtrecorderror",4]]]],[17,"MAX_DOMAIN_NAME","","Maximum length of full name including trailing dot and…",null,null],[8,"StreamTimeoutExt","","`futures::Stream` extension to simplify building…",null,null],[10,"timeout","","Create new `TimeoutStream`",38,[[["duration",3]],[["timeoutstream",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"try_poll_next","","",39,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_future","","",26,[[]]],[11,"try_poll","","",26,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"try_poll_next","","",40,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"try_poll_next","","",41,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"try_poll","","",33,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"try_poll_next","","",42,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"try_poll_next","","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"try_poll_next","","",36,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",14,[[["error",3]]]],[11,"into","","",22,[[]]],[11,"into","","",15,[[]]],[11,"into","","",16,[[]]],[11,"into","","",17,[[],["socketaddr",4]]],[11,"into","","",17,[[],["socketaddrv6",3]]],[11,"extend","","",23,[[["intoiterator",8]]]],[11,"extend","","",24,[[["intoiterator",8]]]],[11,"extend","","",27,[[["intoiterator",8]]]],[11,"extend","","",28,[[["intoiterator",8]]]],[11,"extend","","",29,[[["intoiterator",8]]]],[11,"extend","","",31,[[["intoiterator",8]]]],[11,"extend","","",34,[[["intoiterator",8]]]],[11,"extend","","",35,[[["intoiterator",8]]]],[11,"next","","",44,[[],["option",4]]],[11,"clone","","",0,[[],["class",3]]],[11,"clone","","",1,[[],["type",3]]],[11,"clone","","",22,[[],["interfaceindex",3]]],[11,"clone","","",15,[[],["interface",4]]],[11,"clone","","",23,[[],["browsedflags",3]]],[11,"clone","","",2,[[],["browseresult",3]]],[11,"clone","","",3,[[],["browsedata",3]]],[11,"clone","","",24,[[],["registerrecordflags",3]]],[11,"clone","","",4,[[],["registerrecorddata",3]]],[11,"clone","","",16,[[],["enumerate",4]]],[11,"clone","","",27,[[],["enumeratedflags",3]]],[11,"clone","","",5,[[],["enumerateresult",3]]],[11,"clone","","",28,[[],["queryrecordflags",3]]],[11,"clone","","",29,[[],["queriedrecordflags",3]]],[11,"clone","","",6,[[],["queryrecordresult",3]]],[11,"clone","","",7,[[],["queryrecorddata",3]]],[11,"clone","","",31,[[],["registerflags",3]]],[11,"clone","","",8,[[],["registerresult",3]]],[11,"clone","","",9,[[],["registerdata",3]]],[11,"clone","","",34,[[],["resolvedflags",3]]],[11,"clone","","",10,[[],["resolveresult",3]]],[11,"clone","","",35,[[],["resolvedhostflags",3]]],[11,"clone","","",11,[[],["resolvehostdata",3]]],[11,"clone","","",12,[[],["resolvehostresult",3]]],[11,"clone","","",17,[[],["scopedsocketaddr",4]]],[11,"clone","","",37,[[],["txtrecord",3]]],[11,"clone","","",21,[[],["txtrecorderror",4]]],[11,"default","","",15,[[]]],[11,"default","","",23,[[],["browsedflags",3]]],[11,"default","","",3,[[]]],[11,"default","","",24,[[],["registerrecordflags",3]]],[11,"default","","",4,[[]]],[11,"default","","",27,[[],["enumeratedflags",3]]],[11,"default","","",28,[[],["queryrecordflags",3]]],[11,"default","","",29,[[],["queriedrecordflags",3]]],[11,"default","","",7,[[]]],[11,"default","","",31,[[],["registerflags",3]]],[11,"default","","",9,[[]]],[11,"default","","",34,[[],["resolvedflags",3]]],[11,"default","","",35,[[],["resolvedhostflags",3]]],[11,"default","","",11,[[],["resolvehostdata",3]]],[11,"default","","",37,[[]]],[11,"cmp","","",0,[[["class",3]],["ordering",4]]],[11,"cmp","","",1,[[["type",3]],["ordering",4]]],[11,"cmp","","",22,[[["interfaceindex",3]],["ordering",4]]],[11,"cmp","","",15,[[["interface",4]],["ordering",4]]],[11,"cmp","","",23,[[["browsedflags",3]],["ordering",4]]],[11,"cmp","","",2,[[["browseresult",3]],["ordering",4]]],[11,"cmp","","",3,[[["browsedata",3]],["ordering",4]]],[11,"cmp","","",24,[[["registerrecordflags",3]],["ordering",4]]],[11,"cmp","","",4,[[["registerrecorddata",3]],["ordering",4]]],[11,"cmp","","",16,[[["enumerate",4]],["ordering",4]]],[11,"cmp","","",27,[[["enumeratedflags",3]],["ordering",4]]],[11,"cmp","","",5,[[["enumerateresult",3]],["ordering",4]]],[11,"cmp","","",28,[[["queryrecordflags",3]],["ordering",4]]],[11,"cmp","","",29,[[["queriedrecordflags",3]],["ordering",4]]],[11,"cmp","","",6,[[["queryrecordresult",3]],["ordering",4]]],[11,"cmp","","",7,[[["queryrecorddata",3]],["ordering",4]]],[11,"cmp","","",31,[[["registerflags",3]],["ordering",4]]],[11,"cmp","","",8,[[["registerresult",3]],["ordering",4]]],[11,"cmp","","",9,[[["registerdata",3]],["ordering",4]]],[11,"cmp","","",34,[[["resolvedflags",3]],["ordering",4]]],[11,"cmp","","",10,[[["resolveresult",3]],["ordering",4]]],[11,"cmp","","",35,[[["resolvedhostflags",3]],["ordering",4]]],[11,"cmp","","",11,[[["resolvehostdata",3]],["ordering",4]]],[11,"cmp","","",12,[[["resolvehostresult",3]],["ordering",4]]],[11,"cmp","","",17,[[["scopedsocketaddr",4]],["ordering",4]]],[11,"cmp","","",21,[[["txtrecorderror",4]],["ordering",4]]],[11,"eq","","",0,[[["class",3]]]],[11,"ne","","",0,[[["class",3]]]],[11,"eq","","",1,[[["type",3]]]],[11,"ne","","",1,[[["type",3]]]],[11,"eq","","",22,[[["interfaceindex",3]]]],[11,"ne","","",22,[[["interfaceindex",3]]]],[11,"eq","","",15,[[["interface",4]]]],[11,"ne","","",15,[[["interface",4]]]],[11,"eq","","",23,[[["browsedflags",3]]]],[11,"ne","","",23,[[["browsedflags",3]]]],[11,"eq","","",2,[[["browseresult",3]]]],[11,"ne","","",2,[[["browseresult",3]]]],[11,"eq","","",3,[[["browsedata",3]]]],[11,"ne","","",3,[[["browsedata",3]]]],[11,"eq","","",24,[[["registerrecordflags",3]]]],[11,"ne","","",24,[[["registerrecordflags",3]]]],[11,"eq","","",4,[[["registerrecorddata",3]]]],[11,"ne","","",4,[[["registerrecorddata",3]]]],[11,"eq","","",16,[[["enumerate",4]]]],[11,"eq","","",27,[[["enumeratedflags",3]]]],[11,"ne","","",27,[[["enumeratedflags",3]]]],[11,"eq","","",5,[[["enumerateresult",3]]]],[11,"ne","","",5,[[["enumerateresult",3]]]],[11,"eq","","",28,[[["queryrecordflags",3]]]],[11,"ne","","",28,[[["queryrecordflags",3]]]],[11,"eq","","",29,[[["queriedrecordflags",3]]]],[11,"ne","","",29,[[["queriedrecordflags",3]]]],[11,"eq","","",6,[[["queryrecordresult",3]]]],[11,"ne","","",6,[[["queryrecordresult",3]]]],[11,"eq","","",7,[[["queryrecorddata",3]]]],[11,"ne","","",7,[[["queryrecorddata",3]]]],[11,"eq","","",31,[[["registerflags",3]]]],[11,"ne","","",31,[[["registerflags",3]]]],[11,"eq","","",8,[[["registerresult",3]]]],[11,"ne","","",8,[[["registerresult",3]]]],[11,"eq","","",9,[[["registerdata",3]]]],[11,"ne","","",9,[[["registerdata",3]]]],[11,"eq","","",34,[[["resolvedflags",3]]]],[11,"ne","","",34,[[["resolvedflags",3]]]],[11,"eq","","",10,[[["resolveresult",3]]]],[11,"ne","","",10,[[["resolveresult",3]]]],[11,"eq","","",35,[[["resolvedhostflags",3]]]],[11,"ne","","",35,[[["resolvedhostflags",3]]]],[11,"eq","","",11,[[["resolvehostdata",3]]]],[11,"ne","","",11,[[["resolvehostdata",3]]]],[11,"eq","","",12,[[["resolvehostresult",3]]]],[11,"ne","","",12,[[["resolvehostresult",3]]]],[11,"eq","","",17,[[["scopedsocketaddr",4]]]],[11,"ne","","",17,[[["scopedsocketaddr",4]]]],[11,"eq","","",21,[[["txtrecorderror",4]]]],[11,"partial_cmp","","",0,[[["class",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["class",3]]]],[11,"le","","",0,[[["class",3]]]],[11,"gt","","",0,[[["class",3]]]],[11,"ge","","",0,[[["class",3]]]],[11,"partial_cmp","","",1,[[["type",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["type",3]]]],[11,"le","","",1,[[["type",3]]]],[11,"gt","","",1,[[["type",3]]]],[11,"ge","","",1,[[["type",3]]]],[11,"partial_cmp","","",22,[[["interfaceindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["interfaceindex",3]]]],[11,"le","","",22,[[["interfaceindex",3]]]],[11,"gt","","",22,[[["interfaceindex",3]]]],[11,"ge","","",22,[[["interfaceindex",3]]]],[11,"partial_cmp","","",15,[[["interface",4]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["interface",4]]]],[11,"le","","",15,[[["interface",4]]]],[11,"gt","","",15,[[["interface",4]]]],[11,"ge","","",15,[[["interface",4]]]],[11,"partial_cmp","","",23,[[["browsedflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["browsedflags",3]]]],[11,"le","","",23,[[["browsedflags",3]]]],[11,"gt","","",23,[[["browsedflags",3]]]],[11,"ge","","",23,[[["browsedflags",3]]]],[11,"partial_cmp","","",2,[[["browseresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["browseresult",3]]]],[11,"le","","",2,[[["browseresult",3]]]],[11,"gt","","",2,[[["browseresult",3]]]],[11,"ge","","",2,[[["browseresult",3]]]],[11,"partial_cmp","","",3,[[["browsedata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["browsedata",3]]]],[11,"le","","",3,[[["browsedata",3]]]],[11,"gt","","",3,[[["browsedata",3]]]],[11,"ge","","",3,[[["browsedata",3]]]],[11,"partial_cmp","","",24,[[["registerrecordflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["registerrecordflags",3]]]],[11,"le","","",24,[[["registerrecordflags",3]]]],[11,"gt","","",24,[[["registerrecordflags",3]]]],[11,"ge","","",24,[[["registerrecordflags",3]]]],[11,"partial_cmp","","",4,[[["registerrecorddata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["registerrecorddata",3]]]],[11,"le","","",4,[[["registerrecorddata",3]]]],[11,"gt","","",4,[[["registerrecorddata",3]]]],[11,"ge","","",4,[[["registerrecorddata",3]]]],[11,"partial_cmp","","",16,[[["enumerate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["enumeratedflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["enumeratedflags",3]]]],[11,"le","","",27,[[["enumeratedflags",3]]]],[11,"gt","","",27,[[["enumeratedflags",3]]]],[11,"ge","","",27,[[["enumeratedflags",3]]]],[11,"partial_cmp","","",5,[[["enumerateresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["enumerateresult",3]]]],[11,"le","","",5,[[["enumerateresult",3]]]],[11,"gt","","",5,[[["enumerateresult",3]]]],[11,"ge","","",5,[[["enumerateresult",3]]]],[11,"partial_cmp","","",28,[[["queryrecordflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["queryrecordflags",3]]]],[11,"le","","",28,[[["queryrecordflags",3]]]],[11,"gt","","",28,[[["queryrecordflags",3]]]],[11,"ge","","",28,[[["queryrecordflags",3]]]],[11,"partial_cmp","","",29,[[["queriedrecordflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["queriedrecordflags",3]]]],[11,"le","","",29,[[["queriedrecordflags",3]]]],[11,"gt","","",29,[[["queriedrecordflags",3]]]],[11,"ge","","",29,[[["queriedrecordflags",3]]]],[11,"partial_cmp","","",6,[[["queryrecordresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["queryrecordresult",3]]]],[11,"le","","",6,[[["queryrecordresult",3]]]],[11,"gt","","",6,[[["queryrecordresult",3]]]],[11,"ge","","",6,[[["queryrecordresult",3]]]],[11,"partial_cmp","","",7,[[["queryrecorddata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["queryrecorddata",3]]]],[11,"le","","",7,[[["queryrecorddata",3]]]],[11,"gt","","",7,[[["queryrecorddata",3]]]],[11,"ge","","",7,[[["queryrecorddata",3]]]],[11,"partial_cmp","","",31,[[["registerflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["registerflags",3]]]],[11,"le","","",31,[[["registerflags",3]]]],[11,"gt","","",31,[[["registerflags",3]]]],[11,"ge","","",31,[[["registerflags",3]]]],[11,"partial_cmp","","",8,[[["registerresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["registerresult",3]]]],[11,"le","","",8,[[["registerresult",3]]]],[11,"gt","","",8,[[["registerresult",3]]]],[11,"ge","","",8,[[["registerresult",3]]]],[11,"partial_cmp","","",9,[[["registerdata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["registerdata",3]]]],[11,"le","","",9,[[["registerdata",3]]]],[11,"gt","","",9,[[["registerdata",3]]]],[11,"ge","","",9,[[["registerdata",3]]]],[11,"partial_cmp","","",34,[[["resolvedflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["resolvedflags",3]]]],[11,"le","","",34,[[["resolvedflags",3]]]],[11,"gt","","",34,[[["resolvedflags",3]]]],[11,"ge","","",34,[[["resolvedflags",3]]]],[11,"partial_cmp","","",10,[[["resolveresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["resolveresult",3]]]],[11,"le","","",10,[[["resolveresult",3]]]],[11,"gt","","",10,[[["resolveresult",3]]]],[11,"ge","","",10,[[["resolveresult",3]]]],[11,"partial_cmp","","",35,[[["resolvedhostflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["resolvedhostflags",3]]]],[11,"le","","",35,[[["resolvedhostflags",3]]]],[11,"gt","","",35,[[["resolvedhostflags",3]]]],[11,"ge","","",35,[[["resolvedhostflags",3]]]],[11,"partial_cmp","","",11,[[["resolvehostdata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["resolvehostdata",3]]]],[11,"le","","",11,[[["resolvehostdata",3]]]],[11,"gt","","",11,[[["resolvehostdata",3]]]],[11,"ge","","",11,[[["resolvehostdata",3]]]],[11,"partial_cmp","","",12,[[["resolvehostresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["resolvehostresult",3]]]],[11,"le","","",12,[[["resolvehostresult",3]]]],[11,"gt","","",12,[[["resolvehostresult",3]]]],[11,"ge","","",12,[[["resolvehostresult",3]]]],[11,"partial_cmp","","",17,[[["scopedsocketaddr",4]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["scopedsocketaddr",4]]]],[11,"le","","",17,[[["scopedsocketaddr",4]]]],[11,"gt","","",17,[[["scopedsocketaddr",4]]]],[11,"ge","","",17,[[["scopedsocketaddr",4]]]],[11,"partial_cmp","","",21,[[["txtrecorderror",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",23,[[["browsedflags",3]],["browsedflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",24,[[["registerrecordflags",3]],["registerrecordflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",27,[[["enumeratedflags",3]],["enumeratedflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",28,[[["queryrecordflags",3]],["queryrecordflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",29,[[["queriedrecordflags",3]],["queriedrecordflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",31,[[["registerflags",3]],["registerflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",34,[[["resolvedflags",3]],["resolvedflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",35,[[["resolvedhostflags",3]],["resolvedhostflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",23,[[["browsedflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",24,[[["registerrecordflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",27,[[["enumeratedflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",28,[[["queryrecordflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",29,[[["queriedrecordflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",31,[[["registerflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",34,[[["resolvedflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",35,[[["resolvedhostflags",3]]]],[11,"not","","Returns the complement of this set of flags.",23,[[],["browsedflags",3]]],[11,"not","","Returns the complement of this set of flags.",24,[[],["registerrecordflags",3]]],[11,"not","","Returns the complement of this set of flags.",27,[[],["enumeratedflags",3]]],[11,"not","","Returns the complement of this set of flags.",28,[[],["queryrecordflags",3]]],[11,"not","","Returns the complement of this set of flags.",29,[[],["queriedrecordflags",3]]],[11,"not","","Returns the complement of this set of flags.",31,[[],["registerflags",3]]],[11,"not","","Returns the complement of this set of flags.",34,[[],["resolvedflags",3]]],[11,"not","","Returns the complement of this set of flags.",35,[[],["resolvedhostflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",23,[[["browsedflags",3]],["browsedflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",24,[[["registerrecordflags",3]],["registerrecordflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",27,[[["enumeratedflags",3]],["enumeratedflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",28,[[["queryrecordflags",3]],["queryrecordflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",29,[[["queriedrecordflags",3]],["queriedrecordflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",31,[[["registerflags",3]],["registerflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",34,[[["resolvedflags",3]],["resolvedflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",35,[[["resolvedhostflags",3]],["resolvedhostflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",23,[[["browsedflags",3]],["browsedflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",24,[[["registerrecordflags",3]],["registerrecordflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",27,[[["enumeratedflags",3]],["enumeratedflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",28,[[["queryrecordflags",3]],["queryrecordflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",29,[[["queriedrecordflags",3]],["queriedrecordflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",31,[[["registerflags",3]],["registerflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",34,[[["resolvedflags",3]],["resolvedflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",35,[[["resolvedhostflags",3]],["resolvedhostflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",23,[[["browsedflags",3]],["browsedflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",24,[[["registerrecordflags",3]],["registerrecordflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",27,[[["enumeratedflags",3]],["enumeratedflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",28,[[["queryrecordflags",3]],["queryrecordflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",29,[[["queriedrecordflags",3]],["queriedrecordflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",31,[[["registerflags",3]],["registerflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",34,[[["resolvedflags",3]],["resolvedflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",35,[[["resolvedhostflags",3]],["resolvedhostflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",23,[[["browsedflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",24,[[["registerrecordflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",27,[[["enumeratedflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",28,[[["queryrecordflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",29,[[["queriedrecordflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",31,[[["registerflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",34,[[["resolvedflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",35,[[["resolvedhostflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",23,[[["browsedflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",24,[[["registerrecordflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",27,[[["enumeratedflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",28,[[["queryrecordflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",29,[[["queriedrecordflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",31,[[["registerflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",34,[[["resolvedflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",35,[[["resolvedhostflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",23,[[["browsedflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",24,[[["registerrecordflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",27,[[["enumeratedflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",28,[[["queryrecordflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",29,[[["queriedrecordflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",31,[[["registerflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",34,[[["resolvedflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",35,[[["resolvedhostflags",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",21,[[]]],[11,"from_iter","","",23,[[["intoiterator",8]],["browsedflags",3]]],[11,"from_iter","","",24,[[["intoiterator",8]],["registerrecordflags",3]]],[11,"from_iter","","",27,[[["intoiterator",8]],["enumeratedflags",3]]],[11,"from_iter","","",28,[[["intoiterator",8]],["queryrecordflags",3]]],[11,"from_iter","","",29,[[["intoiterator",8]],["queriedrecordflags",3]]],[11,"from_iter","","",31,[[["intoiterator",8]],["registerflags",3]]],[11,"from_iter","","",34,[[["intoiterator",8]],["resolvedflags",3]]],[11,"from_iter","","",35,[[["intoiterator",8]],["resolvedhostflags",3]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"source","","",14,[[],[["option",4],["error",8]]]],[11,"poll","","",26,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",33,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_next","","",39,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",40,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",41,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",42,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",36,[[["context",3],["pin",3]],[["option",4],["poll",4]]]]],"p":[[3,"Class"],[3,"Type"],[3,"BrowseResult"],[3,"BrowseData"],[3,"RegisterRecordData"],[3,"EnumerateResult"],[3,"QueryRecordResult"],[3,"QueryRecordData"],[3,"RegisterResult"],[3,"RegisterData"],[3,"ResolveResult"],[3,"ResolveHostData"],[3,"ResolveHostResult"],[3,"FullName"],[4,"Error"],[4,"Interface"],[4,"Enumerate"],[4,"ScopedSocketAddr"],[13,"V4"],[13,"V6"],[4,"TimeoutStreamError"],[4,"TxtRecordError"],[3,"InterfaceIndex"],[3,"BrowsedFlags"],[3,"RegisterRecordFlags"],[3,"Connection"],[3,"RegisterRecord"],[3,"EnumeratedFlags"],[3,"QueryRecordFlags"],[3,"QueriedRecordFlags"],[3,"Record"],[3,"RegisterFlags"],[3,"Registration"],[3,"Register"],[3,"ResolvedFlags"],[3,"ResolvedHostFlags"],[3,"TimeoutStream"],[3,"TxtRecord"],[8,"StreamTimeoutExt"],[3,"Browse"],[3,"EnumerateDomains"],[3,"QueryRecord"],[3,"Resolve"],[3,"ResolveHost"],[3,"TxtRecordIter"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);